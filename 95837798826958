<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re: Monitoring your nameserver' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837798826957&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837798826961&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837798826955&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837798826961&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837893100011&r=1&w=2">Re: Monitoring your nameserver</a>
From:       <a href="?a=95837817600008&r=1&w=2">twg.com!david () princeton ! edu  (David S !  Herron)</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=199008">1990-08-16 21:19:42</a></font>
[Download RAW <a href="?l=namedroppers&m=95837798826958&q=mbox">message</a> or <a href="?l=namedroppers&m=95837798826958&q=raw">body</a>]</b>

In article &lt;9008141525.AA27754@sci.ccny.cuny.edu&gt; dan@SCI.CCNY.CUNY.EDU (Dan Schlitt) writes:
&gt;Subject: How do YOU tell if named has died?

&gt;So how do folks arrange to get automatic notification in a timely way
&gt;when their nameserver software dies?  Answers for diverse hardware
&gt;running unix for me, but others may be interested in other cases.

A quick hack would be to have a cron job on occasion which either
checks for the existance of critical processes &amp; start's 'em up.  Or
just start's em &amp; lets the processes fight over how many of which kind
are to be running.  Buuuut..

There's a generic problem with the way daemon's are done in Unix
whose issue is beyond `name service'.  That is that the daemons
are processes spun off into the background and not watched after.
[So therefore I'm cross-posting to unix-wizards..]  If `cron' dies
the system is just as crippled, though in a different way.  And
random people are just as likely to notice cron dieing as they
do when named dies now.

Something on my long and varied list of Things To Do (but haven't done
yet) is to write a program (name: respawn, or daemond) which watches
after generic processes.  As opposed to init which is suited to
watching after /etc/getty's.

This process will somehow take a list of processes to watch after.
It will be the parent of all those processes, so that it will be notified
of them dieing ..  It will have a number of actions it can do when
the process dies, like wait awhile before starting a new copy, start
one immediately, start one under some condition, etc.

This is different from init in that init is rather specific to
watching after getty's.  Even the SysV version of init .. though
the configurability of /etc/inittab gets close to what I have in mind.

This is different from inetd in that inetd is specific to network
services.  `cron' is not a network service, yet it also needs to
be watched over in this way.  Also inetd is suited to a situation
where it starts up a fresh process for each connection -- in the
particular case of named this is bad because named needs to be
running all the time.

At the moment we're relying on the hopefull assumption of a lack of
bugs in these background daemons.  (Where's some wood to knock on??)
-- 
&lt;- David Herron, an MMDF weenie, &lt;david@twg.com&gt;
&lt;- Formerly: David Herron -- NonResident E-Mail Hack &lt;david@ms.uky.edu&gt;
&lt;-
&lt;- Sign me up for one "I survived Jaka's Story" T-shirt!

<b>[<a href="?l=namedroppers&m=95837798826957&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837798826961&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837798826955&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837798826961&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
