<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re: attribute-based naming' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837783026884&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837783026887&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837783026882&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837890200019&r=1&w=2">Re: attribute-based naming</a>
From:       <a href="?a=95837784800005&r=1&w=2">Karen R. Sollins &lt;SOLLINS () XX ! LCS ! MIT ! EDU&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198804">1988-04-29 18:11:53</a></font>
[Download RAW <a href="?l=namedroppers&m=95837783026885&q=mbox">message</a> or <a href="?l=namedroppers&m=95837783026885&q=raw">body</a>]</b>

Actually, it is my view that the current efforts of the task force are in
designing a protocol for communicating with name services or directory
services.  The model of a name service is very general, and does not have
strong implications for particular name or directory services.  The model
was designed to specify communication with name services, while allowing
the name services in question to have widely varying goals and designs,
providing a wide variety of types of services.  We are specifying how the
communication works.  The idea is that clients out there only really need
to know about one protocol (at least at the name resolution level) in order
to request name resolution.

What Larry has implemented is a name service that support the sorts of
communication that we are specifying directly.  His services could also
support other paradigms for communication.  I also believe that other name
services could easily have a front end built for them to support the
protocol we will be proposing.  The client's model includes both typed objects
and attributes for them.  Of course, this is very general and can be mapped
into a variety of other internal models within name services.

I think this gives you an idea of what we are doing.  The aforementioned
paper will indeed appear when in a more complete form.  The writing is in
progress, even today (and would be this moment if I weren't writing this
message).
-------

<b>[<a href="?l=namedroppers&m=95837783026884&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837783026887&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837783026882&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
