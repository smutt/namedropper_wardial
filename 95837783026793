<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Wisdom of server failure errors' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837783026792&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837783026794&w=2">next in list</a>] [<font color="#c0c0c0">prev in thread</font>] [<a href="?l=namedroppers&m=95837783026794&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837889700033&r=1&w=2">Wisdom of server failure errors</a>
From:       <a href="?a=95837785200027&r=1&w=2">Philip Almquist &lt;almquist () jessica ! Stanford ! EDU&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198802">1988-02-08 15:37:00</a></font>
[Download RAW <a href="?l=namedroppers&m=95837783026793&q=mbox">message</a> or <a href="?l=namedroppers&m=95837783026793&q=raw">body</a>]</b>

	The domain specification says that a domain server is supposed to
return a response with the server failure bit set if it gets an internal
error while processing a request.  An alternate theory, contrary to the
spec, says that it is better for the server to fail to respond when it
gets an internal error.  I'm curious what people think about this.

Some data points to consider:

 1) The Bind resolver (all versions) does what is argueably the wrong
    thing when it receives a server failure response.  Basically, the
    Bind resolver algorithm is much like a dialup rotary: it tries servers
    it knows sequentially about until it gets a response.  When it gets
    a server failure response, it gives up the search and returns a
    temporary failure.  When the user retries, the list of servers is
    started at the beginning again, so in all probability it fails
    again even if only one of the servers is ill.

 2) I just learned today that at least one version of the TOPS-20
    resolver does something even worse.  It also has a list of servers,
    which it cycles through.  Unlike bind, however, it starts with
    the last server which responded, rather than at the beginning of
    the list.  It cycles to the next server in the list only when it
    does not get a response, so a server which sends back a server
    failure error guarantees that the resolver will choose that
    server for the next request.

 3) I believe that a number of other resolvers are based on the Bind
    resolver, and so may well have the same behavior it does.

						Philip

Notes: the description of the Bind algorithm is overly simplified for
ease of presentation.  The information about the TOPS-20 resolver is
second hand and a little fuzzy.  I believe that the version of the
TOPS-20 resolver in question is the one from ISI, probably with some
Stanford modifications.

<b>[<a href="?l=namedroppers&m=95837783026792&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837783026794&w=2">next in list</a>] [<font color="#c0c0c0">prev in thread</font>] [<a href="?l=namedroppers&m=95837783026794&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
