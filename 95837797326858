<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re: DNS =&gt; /etc/hosts' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837797326857&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837797326859&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837797326857&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837891400035&r=1&w=2">Re: DNS =&gt; /etc/hosts</a>
From:       <a href="?a=95837816800011&r=1&w=2">zaphod.mps.ohio-state.edu!uakari.primate.wisc.edu!caesar.cs.montana.edu!ogicse!h</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=199002">1990-02-04 21:27:45</a></font>
[Download RAW <a href="?l=namedroppers&m=95837797326858&q=mbox">message</a> or <a href="?l=namedroppers&m=95837797326858&q=raw">body</a>]</b>

In article &lt;3033@rouge.usl.edu&gt; pml@cacs.usl.edu (Patrick M. Landry) writes:
&gt;. . .
&gt;still need it. I am looking for a program which will query bind and 
&gt;create a /etc/hosts file. I am sure other people have thought of this

I took a slightly different approach, since there is some small amount
of information which the DNS itself does not provide for building an
/etc/hosts table (mostly things like what order to use for duplicate
hostnames and addresses, etc.).

My approach was to take the DNS master files (those containing the
primary data) and parse them, using the existing order where it might be
significant, to build an /etc/hosts file.  Note that a zone transfer
does not necessarily preserve the order of records as they occurred
in the master files (nor is there any reason for it to do so).  But
a hosts file is very dependent on the order of its records.

The current implementation builds hostname aliases using a "default
domain" the same way the BIND-4.8 resolver does, so you can build a
hosts file which will mimic the behavior of the BIND resolver.  The
system is mostly satisfactory to us, and works quite well.

The "dns2hosts" program is a Perl script, based on a Perl subroutine
library which parses DNS master files (as defined in RFC-1035, which
is a superset of what BIND-4.8 uses, BTW) with the help of a
hand-crafted lexical analyzer written in C (and called as a filter by
the Perl subroutine).

I use the parser subroutine in other Perl scripts as well -- I have a
simple one which produces PTR records from A records.  A person could
even write a DNS nameserver in Perl, if one were so inclined, but I
can see no advantage to that.  Like most software still under
development, it lacks documentation, and the parser could do with
better sanity checking of the actual values of the resource records.

Perhaps a beta-test release would be in order....

-- 
Marion Hakanson         Domain: hakanson@cse.ogi.edu
                        UUCP  : {hp-pcd,tektronix}!ogicse!hakanson

<b>[<a href="?l=namedroppers&m=95837797326857&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837797326859&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837797326857&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
