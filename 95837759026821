<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Multi-homed hosts and which address to use' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837759026817&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837759026823&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837759026817&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837759026823&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837888500022&r=1&w=2">Multi-homed hosts and which address to use</a>
From:       <a href="?a=95837784000019&r=1&w=2">Rob Austein &lt;SRA () XX ! LCS ! MIT ! EDU&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198611">1986-11-20 3:57:00</a></font>
[Download RAW <a href="?l=namedroppers&m=95837759026821&q=mbox">message</a> or <a href="?l=namedroppers&m=95837759026821&q=raw">body</a>]</b>

There are partial answers in simple cases, but no general answer.  The
precise information you need to do it optimally every time doesn't
exist (tends to be extrememly transitory, known only to gateways
during its short lifetime, and not quite what you want anyway).

If you and the destination host are on the same network (any network,
even if you are both multi-homed) it's fairly straightforward.  The
ideas TOPS-20 uses for choosing addresses and network interfaces will
work well here.  (I'll describe if there's interest.)

You can (very painfully) do the "right thing" if the part of the
network you are interested in has a simple enough configuration.  In
graph theory terms, there aren't any cycles if you consider each
-network- a vertex (networks instead of hosts because all the actual
cost information within a network is hidden from you by the gateways,
as it should be).  In the old days you'd grovel over the NETWORK and
GATEWAY entries from the host tables, these days the equivalent would
be groveling the PTR and A RRs for networks and gateways (see RFC-883,
pages 68-69 for network related PTRs).  Basicly you look up all the
gateways for the nets you are on, then look up all the addresses of
those gateways, then look up all the gateways to all those nets,
etcetera.  This rapidly becomes an intractable problem, but it can be
simplified vastly if you are willing to restrict yourself to routes
involving (1) your local LANs and (2) a few known long haul networks
(ARPANET, SATNET, MILNET, Wideband, whatever) and write this
information into a config file.  This wouldn't be that all hateful; at
the moment the long haul nets change pretty slowly compared to the
rest of the net.

The general problem is, of course, that there are in fact cycles in
the Internet now and there will be more in the future.

The question is whether or not you care about the general case.

For a big mail relay site you might be able to get some improvement in
some cases.  At some reasonable interval (nightly? weekly?) you run a
background task that does the recursive lookup described above.  You
might want to set limits on how far away from your connected net(s) it
should look (four hops, to pick a number out of the air).  If you
detect any cycles, throw away any information about that net and the
nets adjacent to it; the simple-minded program is not competent to
decide in this case.  The term adjacent is purposely left fuzzy, it is
something reasonable relative to the number of hops away from yourself
you are searching.  Sort the data you have left after this pruning, by
number of hops from your net(s).  Dump the result as the configuration
file of preferred networks for use by your resolver.

Note that this is just a preference list.  It should not affect
whether or not you get a connection to the host, but on the whole it
should improve throughput by keeping you from using particularly silly
addresses (like a host on network 18.0.0.0 trying to talk to SRI-NIC
on its Milnet address because that was listed before the Arpanet
address, to use a real example that screws one of the machines I use).

You can cut down on the overhead somewhat if you have just one machine
at your site calculate this table and everybody else just copies it.

I emphaticly do -not- recommend using this kind of data as a general
routing method!  It's simply a method of automaticly generating a
configuration file that some people are already generating by hand.
(I'll probably get bashed by the Protocol Police for using the words
"hop" and "count" when talking about something other than gateways, in
spite of this disclaimer...)

There is also the problem that a lot of the data you need (in
particular the network PTR RRs) isn't in the domain system because
nobody has figured out what it's for yet.

Now that I've hopelessly confused the issue, I'll shut up.

--Rob

<b>[<a href="?l=namedroppers&m=95837759026817&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837759026823&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837759026817&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837759026823&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
