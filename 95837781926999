<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'RR TTL suggestions' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837781926998&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837781927000&w=2">next in list</a>] [<font color="#c0c0c0">prev in thread</font>] [<a href="?l=namedroppers&m=95837781927019&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837889500018&r=1&w=2">RR TTL suggestions</a>
From:       <a href="?a=95837784200026&r=1&w=2">Peter Karp &lt;KARP () SUMEX-AIM ! STANFORD ! EDU&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198711">1987-11-15 16:16:25</a></font>
[Download RAW <a href="?l=namedroppers&m=95837781926999&q=mbox">message</a> or <a href="?l=namedroppers&m=95837781926999&q=raw">body</a>]</b>

I have two suggestions regarding handling of RR time-to-live values.
Both address the conflict between use of long values to increase cache
hit rates and thus decrease queries to foreign servers, versus use of
short values to ensure propagation of new information throughout the
domain system.

Suggestion 1: By default use long values (e.g. 1 week) for the TTL field
to increase hit rates.  My guess is that a very small fraction of the
domain database actually changes within a week (statistics here would be
interesting).  But, when a domain administrator knows in advance that
particular RRs will be changing, they can adjust TTL values downards for
those particular RRs in advance.  For example, if I know that
FOO.STANFORD.EDU will be changing its IP address in 2 weeks, I can
change the TTL value for its A records only down to a value of say 1
day well in advance of the change.

Suggestion 2: Change the semantics of the TTL.  Current semantics are:
if a server has been holding an RR for longer than its TTL, the RR is
trashed.  New semantics should be: if a server has been holding an RR
for longer than its TTL, and a query arrives which that RR would answer,
then attempt to find an authoritative refresh for that RR (i.e., verify
that the RR is still accurate).  If an authoritative refresh cannot be
found (e.g.  bedause all authoritative domain servers cannot be
reached), then use the cached RRs to return an answer (which is likely
to be accurate).  Otherwise use the authoritative RRs to generate the
answer.  Example: my server has cached an A record for FOO.STANFORD.EDU,
but the RR has timed out.  A query arrives for the address of this host,
but I cannot reach a server which is authoritative for the STANFORD.EDU
domain.  I return the outdated (but better than nothing) RR from my
cache.  This strategy implies the need for a new timeout value: the TTT
(time-to-trash).  TTT &gt; TTL.  The TTT would probably be server-specific
rather than domain-specific.  The TTL tells me when an RR is
sufficiently old that I try to verify it.  The TTT tells me when an RR
is sufficiently old that because it has not been the object of any
queries which would have caused it to be refreshed, I should purge it
from my cache.

Peter
-------

<b>[<a href="?l=namedroppers&m=95837781926998&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837781927000&w=2">next in list</a>] [<font color="#c0c0c0">prev in thread</font>] [<a href="?l=namedroppers&m=95837781927019&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
