<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re: NIC net 10 address pollution' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837797326935&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837797326939&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837797326935&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837892200014&r=1&w=2">Re: NIC net 10 address pollution</a>
From:       <a href="?a=95837816800033&r=1&w=2">pma () cnd ! hp ! com</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=199004">1990-04-10 9:40:42</a></font>
[Download RAW <a href="?l=namedroppers&m=95837797326937&q=mbox">message</a> or <a href="?l=namedroppers&m=95837797326937&q=raw">body</a>]</b>


&gt; I just checked what our name server thought the root name servers
&gt; are and not only was the NIC's 10 address there, there were also
&gt; .arpa's!  I sure wish that BIND had an option to log who pollutes
&gt; its cache.

Here is a code segment for ns_resp.c that I had used a while ago
to track down this problem for us.  The problem was the result of
a parent saying that server X was authoritative for domain Y when,
in fact, server X was not authoritative.  When server X was questioned
about domain Y, it sometimes responded with NS records for the root
(depending on whether it didn't find any other NS records on its
walk up the tree.)

A way to solve the problem without a code change is to make sure that
the servers that are registered for a domain really are authoritative
for that domain.  I wrote a program to check all our subdomain delegations
so we are better at managing our own domain.

paul
==========
*** /tmp/,RCSt1a00312	Tue Apr 10 09:21:15 1990
--- /tmp/,RCSt2a00312	Tue Apr 10 09:21:20 1990
***************
*** 1038,1044
  			fprintf(ddt,"update failed (DATAEXISTS)\n");
  #endif
  		(void) free((char *)dp);
! 	} else if (type == T_NS &amp;&amp; savens != NULL)
  		*savens = dp;
  	return (cp - rrp);
  }

--- 1038,1062 -----
  			fprintf(ddt,"update failed (DATAEXISTS)\n");
  #endif
  		(void) free((char *)dp);
! 	} else if (type == T_NS &amp;&amp; savens != NULL){
! #ifdef TRACEROOT
! 		char qname[MAXDNAME];
! 		int qn;
! 		/*
! 		** Trace where roots NS records come from
! 		*/
! 		qname<A NAME="-0"></A><A HREF="#0">[0]</A> = '\0';
! 		qn = dn_expand(msg, msg + msglen, msg + sizeof(HEADER), qname,
! 							sizeof(qname));
! 		if (qn &lt; 0) 
! 			{ qname<A HREF="#0">[0]</A> = '?'; qname<A NAME="-1"></A><A HREF="#1">[1]</A> = '\0';}
! 		else if (qname<A HREF="#0">[0]</A> == '\0')
! 			{ qname<A HREF="#0">[0]</A> = '.'; qname<A HREF="#1">[1]</A> = '\0';}
!         	if ((dname<A HREF="#0">[0]</A> == '\0') &amp;&amp; (zone == 0)) 
!                	      syslog(LOG_ERR, 
! 		           "For question \"%s\", added root NS record for %s from %s\n",
!                                    qname, data, inet_ntoa(from_addr.sin_addr));
! #endif
  		*savens = dp;
  	}
  	return (cp - rrp);
***************
*** 1040,1045
  		(void) free((char *)dp);
  	} else if (type == T_NS &amp;&amp; savens != NULL)
  		*savens = dp;
  	return (cp - rrp);
  }
  

--- 1058,1064 -----
                                     qname, data, inet_ntoa(from_addr.sin_addr));
  #endif
  		*savens = dp;
+ 	}
  	return (cp - rrp);
  }
  

<b>[<a href="?l=namedroppers&m=95837797326935&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837797326939&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837797326935&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
