<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re: RD/RA/AA/caching' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837781927054&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837781927056&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837781927042&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837889500024&r=1&w=2">Re: RD/RA/AA/caching</a>
From:       <a href="?a=95837784000011&r=1&w=2">David C. Plummer &lt;DCP () QUABBIN ! SCRC ! Symbolics ! COM&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198711">1987-11-23 13:31:00</a></font>
[Download RAW <a href="?l=namedroppers&m=95837781927055&q=mbox">message</a> or <a href="?l=namedroppers&m=95837781927055&q=raw">body</a>]</b>

    Date: Sat, 21 Nov 87 21:25:51 PST
    From: karels%okeeffe.Berkeley.EDU@ucbvax.Berkeley.EDU (Mike Karels)

I think we are converging on the real question:  How can a requestor of
domain information request that the information be complete, and how
does the provider of the information indicate that the information is
complete or partial?

The answer appears to be: There is no such mechanism.

The questions I have been effectively asking appear to be: Can the AA
bit be used to indicate complete information.

The anwer appears to be: No.  AA implies complete by virtue that it is
authoritative, but non-authoritative servers who are caching complete
information are not allowed to claim to be authoritative.

Well, I'm scrod.  My applications are much, MUCH more concerned with
complete information than they are about the authoritativeness of the
data.

What to do?  Help!!

There is a specific proposal for defining two of the unused header bits
below.

I also have a few responses to your message.

    My question, in response to 2b, is why should the workstation feel
    obligated to go the the authoritative source?  If it trusts the site
    resolver and its cache, it ought to be sufficient to use the site resolver's
    answer.

As we've learned, how does it know if it should trust the site
resolver's cache?  If there were a complete/partial flag I think that
would help tremendously.

    Yes, I know, this makes some assumptions; let's examine them,
    because this is a useful configuration and ought to be made workable.
    First, I believe that a resolver, site-wide or otherwise, ought to group
    related data, such as addresses for a host or servers for a domain,
    and ought to discard all related data when any of it times out.

I'm not sure I believe either of these (relative to the domain
implementation).  I certainly agree data should be grouped, and more
strongly that data should not be ungrouped for transmission (i.e., in
separate RRs that have different types that are asked for separately).
I don't see the advantage of grouping current-domain-system data.  The
other thing I disagree with is the discard.  The "discard requirement"
has been the major source of grief in our system, and I think it's
wrong.  "Stale" is a much better concept for a loose-consistency
database such as the domain system.  I would much rather keep the data,
try to validate it, and send it out with a TTL of 0 then to throw it
away and hide it from the requestor.

    (The current version of BIND does this, in fact.)  Then, when a client
    queries for a single type (e.g., addresses for a host), it can be sure
    that the answer it receives is complete.

Really?  Suppose between the time I ask for an A record and a WKS record
the network between the site-resolver and the authoritative server goes
down.  The best the server can do is say no WKS records,
non-authoritatively.  That's not complete.  Maybe you are saying such
a server should diligently say RCODE=SERVER-FAILURE?  That might be
fine, but I seriously doubt many server do this today.  And there's
another problem with that: If a server gets an A record by virtue of an
additional field for some host, but can't reach the authoritative server
for the A record, the A record is not known to be complete.  There may
be other A records.  It seems a shame to have to say SERVER-FAILURE when
there is SOME information that might be useful.

    This leaves the problem
    of wildcard types (or classes, which are potentially worse, as the
    servers are not necessarily the same).  For queries with wildcard
    types, either the client is willing to accept partial information,
    or wishes to quickly determine whether anything is known locally
    (I think you mentioned this in one of your messages recently).

I asked about wildcards a couple weeks ago.  It's clear to me I can't
personally wrap my brain around wildcard issues until this more
fundamental issue gets cleared up.

    In the future, I'd like to have the servers remember the type of query
    used to retrieve data in the cache, so that answers can be known to be complete.

This is an implementation issue, isn't it?  It's completely reasonable,
and it's in my plans, and it may be a necessary step to ensure an answer
is complete, but at least in today's there-is-no-completeness-mechanism
world it is an implementation issue.

    For example, the results of a request for type ANY can be assumed complete
    for the shortest time in any of the records returned.  (This may be
    problematical, actually; more transient traits may exist, and an SOA
    may need to be consulted for a minimum value.)  
I mentioned something similar in my question labeled 2c.
    Even this capability
    leads to a question: when a server receives a request for type ANY,
    and it has information not known to be complete, when it has not asked
    for all information, should it return partial information from the cache?
    Unfortunately, there is no mechanism for the client to convey its wish
    for complete vs. partial information.  
Bingo!!!
    It might be nice to define
    the AA bit in a query as meaning a request for complete, if not authoritative,
    information.

This is a little silly, since if we are contemplating changing servers
to recognize this, we might as well do it right.  There's also the
conflict that it may make more semantic sense to use AA in the request
to mean a request for authoritative information.  Anyway, there are
still three bits left in the header.  Let's call one of them CAD (for
complete answer desired), and the other CA (for complete answer).

If I were to make my site resolver (which is also the authoritative
server for my site for the outside) do this today, would anything break?
I see two cases: What will other server on the big-I Internet do when
they see CAR set on a query from the site resolver?  What will other
resolvers do when they see CAP set on responses they get from the site
resolver?

    For now, I believe that a server should return possibly-partial
    information in response to such a query.  A client wishing definitive
    information of a given type (A, MX, etc.) should be requested explicitly
    to determine its existence, and a response to such a query should include
    all or none of the records of that type for the name and class.

I can't parse that last sentence.  "A client ... should be requested
explicitly ..."  If you meant "A client ... should request [the data]
explicitly ..." then we are back to my question 2b' asking why my
workstation should have to do this since the site resolver really thinks
it has the right info.  The problem is, without CAR/CA there is no way
for the workstation to ask the site resolver for this.

<b>[<a href="?l=namedroppers&m=95837781927054&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837781927056&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837781927042&w=2">prev in thread</a>] [<font color="#c0c0c0">next in thread</font>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
