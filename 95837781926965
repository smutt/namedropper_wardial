<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re:  Gratuitous use of the domain system' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837781926964&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837781926966&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837781926964&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837781926966&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837889000035&r=1&w=2">Re:  Gratuitous use of the domain system</a>
From:       <a href="?a=95837784000011&r=1&w=2">David C. Plummer &lt;DCP () QUABBIN ! SCRC ! Symbolics ! COM&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198710">1987-10-26 9:12:00</a></font>
[Download RAW <a href="?l=namedroppers&m=95837781926965&q=mbox">message</a> or <a href="?l=namedroppers&m=95837781926965&q=raw">body</a>]</b>

    Date: Sat, 24 Oct 87 20:57:01 EDT
    From: hedrick@topaz.rutgers.edu (Charles Hedrick)

    On the question "why don't all site maintainers install valid WKS
    records".  It's our understanding that WKS is now believed to be
    useless, and that indeed few places use them.  We install them for all
    machines that are the targets of MX records, because the mail RFC
    requires us to do so, but that was the only case we saw where WKS
    records were required.  As far as I know, even those WKS records
    aren't actually used by anything, and indeed one of our IP wizards
    opposed putting in even them.  (The cost is primarily memory.  At
    least in the version of bind we have, the whole databse is kept in
    core, so we don't put in anything we don't absolutely need.)

I've said this before, and I guess I have to say it again.  There are,
today, and have been for about 4 years now, systems that really, really
and truly care about service records.  One such system is Symbolics
Genera.  Since Release 5.0 (circa early '84) we have had a namespace
system that is more-or-less a sibling to the domain system.  We really
care about those WKS records.  When a user wants to login to a remote
host, how is it supposed to know if it can use TELNET or SUPDUP.  If a
file wants to be transfered, how is it supposed to know if it can use
TCP/FTP, UDP/TFTP, TCP/NFILE or TCP/NFS.  Or (and get this!), when a
domain resolver wants to talk to server, how is it to know if it can use
TCP or UDP?  Once the system figures out "can" it then tries to order
them by desirability (e.g., TCP is better than UDP, SUPDUP is better
than TELNET, NFILE is better (for LispMs at least) than NFS which is
better than TCP/FTP which is better than UDP/TFTP).

And worse, these questions are not specific to TCP, they also apply to
Chaosnet, XNS, DECnet, SNA, whatever.

Terminology: The services of "well known services" aren't services.
They are protocols.  TELNET and SUPDUP are protocols.  They implement a
service called LOGIN.  SMTP is a protocol.  It can implement several
services, among them send interactive message to user, deliver mail to
user, forward mail, and expand mail recipient.

More terminology (in the LispM): TCP and UDP are mediums.  They can also
be thought of as protocols, but I think the qualified term "network
protocol" is more appropriate.  Similarly, what the LispM calls
protocols might better be called "communication protocols."

On the Lisp Machine, users deal with services.  It is the generic
network system together with the namespace (and domain) database that
determines how to invoke that service.  The namespace database has
triples saying
	I support service X on medium Y using protocol Z
e.g.,			LOGIN        TCP	     TELNET

Because of the lack of maintenance of WKS records, and the time-honored
belief (and mistaken in my opinion) that a name-to-address binding is
enough to signify a host, our domain code has to use back door kludges
to add domain services to host objects before we can actually connect.

I'm of the opinion that databases should be implemented as intended and
that this consideration comes far about implementation details.  (If the
intention isn't good enough, use a different database.)  Therefore, if
an implementation detail is whether or not to keep the database in
core, and if keeping it in core would not allow implementation as
intended, then I would find a way to implement it out-of-core.  What
ever happened to paging?

<b>[<a href="?l=namedroppers&m=95837781926964&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837781926966&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837781926964&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837781926966&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
