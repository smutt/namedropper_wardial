<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'re: Multi-homed hosts and which address to use' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837759026820&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837759026817&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837759026818&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837759026817&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837888500022&r=1&w=2">re: Multi-homed hosts and which address to use</a>
From:       <a href="?a=95837783700008&r=1&w=2">Craig Partridge &lt;craig () loki ! bbn ! com&gt;</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198611">1986-11-19 16:31:17</a></font>
[Download RAW <a href="?l=namedroppers&m=95837759026816&q=mbox">message</a> or <a href="?l=namedroppers&m=95837759026816&q=raw">body</a>]</b>


Rich,

    My primary perspective on this issue is that of someone running a large
mail relay (viz: the CSNET relay).  Our goal is to get the mail delivered,
with speed being a secondary (although important) issue.  To this end,
we try every (or near every) listed address for a host before concluding
we can't deliver to it (and then we do this several times over several
days before we return the mail).

    I'm approaching the proposals from this perspective:

&gt; ==&gt; PROPOSAL:  For your local network at least, set up appropriate rout-
&gt;    ing info on each host (in UNIX, for example, this could be done via
&gt;    "/etc/route add" commands referencing individual multi-homed hosts)
&gt;    so that packets to multi-homed hosts will take the "best" paths no
&gt;    matter which of the possible addresses are used.

    This doesn't allow me to reach the other address if the preferred
network interface goes down or is horribly congested.  Now I have
to worry about whether my routing table is a reasonable representation
of the local environment.  Also, my local environment includes around
300 network interfaces, with some hosts having three and four interfaces.
I don't want to have to maintain a routing table that large (or wait
that long to initialize it when I reboot my machine).

&gt; ==&gt; PROPOSAL:  Each zone maintainer should arrange the addresses for his
&gt;    multi-homed hosts in the "optimal" order (best address first).  Name
&gt;    servers should make sure to preserve the ordering of RR's with the
&gt;    same name/class/type.  Resolvers should return addresses in the same
&gt;    order as they appear in datagrams from the name servers.

    The major problem with this, as you point out, is that it assumes
that everyone has an obvious address which is optimal for everyone.
This just isn't true for any well connected (i.e. multi-gateway) site.

&gt; ==&gt; PROPOSAL:  Name servers should be modified to determine an optimal
&gt;    address order for multi-homed hosts, based on the address(es) of the
&gt;    server host, and/or the address of the querying host.

&gt; ==&gt; PROPOSAL:  Don't modify the name servers at all.  Instead, configure
&gt;    the resolver routines on each host to sort multiple addresses in any
&gt;    replies they may get, according to whatever is best for use on that
&gt;    particular host.  (I understand TOPS-20 does something like this.)

    I'm a primary advocate of using a configuration file read by the resolver,
for the following reason:

    I maintain (and have yet to hear a good argument the other way) that it is
impossible for for any program to figure out which address to prefer, short
of sampling the network and trying all the options (which is probably too
expensive).  People have argued that you should be able to make a reasonably
good guess based on what networks you are attached to, but this really
doesn't work very well.  For example, (and this is real), if you have two
hosts on the same IMP on the Arpanet, which are also attached to local
area networks which are gatewayed (i.e. host X is local net A, and host Y
is on local net B, and there is a gateway between A and B), it is likely
that your throughput will be an order of magnitude greater using the
local area networks.  This situation is hard to detect by a program.  It
can get worse -- I've seen a situation where the two local area networks
were both attached to a third and it was still faster to use the local
area network interfaces.

    Of course, if I can prod someone to come up with a good algorithm that
allows the server or resolver to make optimal decisions, I'm all for it.
I don't enjoy maintaining the static table any more than the next guy.

Craig

<b>[<a href="?l=namedroppers&m=95837759026820&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837759026817&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837759026818&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837759026817&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
