<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>'Re:  BIND: Semi-random selection' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=namedroppers&m=95837783026888&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837783026889&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837783026870&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837783026891&w=2">next in thread</a>] </b>
<b><font size=+1>
List:       <a href="?l=namedroppers&r=1&w=2">namedroppers</a>
Subject:    <a href="?t=95837890200016&r=1&w=2">Re:  BIND: Semi-random selection</a>
From:       <a href="?a=95837785400024&r=1&w=2">allosaur.cis.ohio-state.edu!bob () tut ! cis ! ohio-state ! edu  (Bob Sutterfield)</a>
Date:       <a href="?l=namedroppers&r=1&w=2&b=198805">1988-05-04 17:14:46</a></font>
[Download RAW <a href="?l=namedroppers&m=95837783026890&q=mbox">message</a> or <a href="?l=namedroppers&m=95837783026890&q=raw">body</a>]</b>

In article &lt;11394@tut.cis.ohio-state.edu&gt; karl@triceratops.cis.ohio-state.edu (Karl \
Kleinpaste) writes: 
&gt; [specific example of a Bridge terminal server]
&gt; ...So what we would like to be able to do is have the users request
&gt; "connect sun.cis.ohio-state.edu" and get a randomly-selected Sun out
&gt; of the set of Suns available.

In article &lt;8804241731.AA11054@uc.msc.umn.edu&gt; slevy@UC.MSC.UMN.EDU ("Stuart Levy") \
writes:
&gt; This doesn't sound like it fits very well with the idea of a domain
&gt; name server to me.

Any better suggestions that get the job done are appreciated.

&gt; What you really want to do is to fool the Bridge CS/1, right -- i.e.
&gt; it doesn't really matter whether the whole world can look up
&gt; sun.cis.ohio-state.edu and get a random SUN?

Yes!  What we really want to do is to allow the whole world to find
any Sun in our department.  The Bridge terminal server was just the
first example application, offered to provide some concreteness to the
general problem.  Fixes that affect only the CS/1 are helpful, but
more difficult to implement (it's not under our staff's
administration) and not as interesting.  See below for other
applications.

&gt; How about if you create another application program that you run
&gt; somewhere...
&gt; [description of a scheme for a front-end daemon that handles
&gt; "random" requests and gives the rest to the normal server]
&gt; What this would buy is mostly the chance to avoid messing with the
&gt; BIND code in a complicated way you'd have to reinstall whenever you
&gt; upgraded.

A very good thing to consider, and the main thing that makes us
nervous about making local modifications to the distributed sources.
Your scheme sounds the best so far.

In article &lt;8804251534.AA02057@Larry.McRCIM.McGill.EDU&gt; \
philipp@LARRY.MCRCIM.MCGILL.EDU (Philip Prindeville [CC]) writes:
&gt; ( Since this question is specific to BIND, it would have been better
&gt; suited to the BIND mailing list... &lt;bind@ucbarpa.berkeley.edu&gt; )

Thank you for the pointer.  We've now asked to be subscribed to that list.

&gt; It is dubious whether the nameserver is an appropriate place to do
&gt; this -- I doubt very much if it is...

We're reluctant to futz with the nameserver, too, but haven't found a
better place to solve the general problem than in the name service arena.

&gt; A more appropriate solution would be to fix the terminal server.

Impractical in our case - see above.

&gt; Have it listen to rwho packets (yetch!) and cache the load factor
&gt; information that is included.  Then, pick the one with the lowest
&gt; load.  Of course, the information will always be somewhat stale.

The terminal server is across Proteon network somewhere the other side
of campus, and it won't hear rwhod broadcasts.  We had expected that
whatever solution we arrived at would involve rwhod, and that it would
be in named itself.  Perhaps the front-end daemon that Mr Levy
suggests would lend itself to rwhod-awareness.

The other reason we're resistant to "just go futz the terminal
server", besides administrative/political realities, is that there are
lots of other applications for something like this.  For example: I'd
like my parallel RPC-based modifications to GNU Make to be able to run
on as many workstations as are available on the network, and to use
the less-loaded ones more heavily.  GNU Chess and the RPC Mandelbrot
generator both require (now) hard-coded lists of candidate hosts to
use.

These are just the first few that pop to mind, and the folks around
here doing "real research" into large-grained parallelism can surely
find you plenty more.

I agree that this fits more in the arena of general service
availability than nameservice, but until we get a look at Hesiod the
nameserver seems the most general place to put it.

Anyway, thanks for the suggestions.  Any more are certainly welcome.
We'll let you know what comes of all this.
-=-
 Bob Sutterfield, Department of Computer and Information Science
 The Ohio State University; 2036 Neil Ave. Columbus OH USA 43210-1277
 bob@cis.ohio-state.edu or ...!att!osu-cis!bob


<b>[<a href="?l=namedroppers&m=95837783026888&w=2">prev in list</a>] [<a href="?l=namedroppers&m=95837783026889&w=2">next in list</a>] [<a href="?l=namedroppers&m=95837783026870&w=2">prev in thread</a>] [<a href="?l=namedroppers&m=95837783026891&w=2">next in thread</a>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
